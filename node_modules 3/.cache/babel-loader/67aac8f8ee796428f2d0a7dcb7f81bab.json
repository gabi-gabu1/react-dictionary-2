{"ast":null,"code":"var _jsxFileName = \"/Users/gabisetti/Desktop/react-dictionary-2/src/Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Dictionary.css\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  let [keyword, setKeyword] = useState(props.keyWord);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photo, setPhoto] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handlePexelsResponse(response) {\n    setPhoto(response.data.photos);\n  }\n\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n    let pexelsApiKey = \"563492ad6f91700001000001fdc58a25c9094b198c1531765ee97940\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=9`;\n    axios.get(pexelsApiUrl, {\n      headers: {\n        Authorization: `Bearer ${pexelsApiKey}`\n      }\n    }).then(handlePexelsResponse);\n  }\n\n  function submitForm(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  function wordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dictionary\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"What word do you want look up?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitForm,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: wordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"suggested words: dawn, piano, comet..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Photos, {\n        photos: photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"coded\",\n        children: [\"Coded by Gabriela Dontamsetti\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/gabi-gabu1/react-dictionary-2\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"open-sourced\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n\n_s(Dictionary, \"7p6lzhGKOOy5vR5Xz0pc0fr/i6U=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"names":["React","useState","axios","Results","Photos","Dictionary","props","keyword","setKeyword","keyWord","results","setResults","loaded","setLoaded","photo","setPhoto","handleResponse","response","data","handlePexelsResponse","photos","search","apiUrl","get","then","pexelsApiKey","pexelsApiUrl","headers","Authorization","submitForm","event","preventDefault","load","wordChange","target","value"],"sources":["/Users/gabisetti/Desktop/react-dictionary-2/src/Dictionary.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Dictionary.css\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\n\nexport default function Dictionary(props) {\n  let [keyword, setKeyword] = useState(props.keyWord);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photo, setPhoto] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n  function handlePexelsResponse(response) {\n    setPhoto(response.data.photos);\n  }\n  function search() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n\n    axios.get(apiUrl).then(handleResponse);\n\n    let pexelsApiKey =\n      \"563492ad6f91700001000001fdc58a25c9094b198c1531765ee97940\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=9`;\n    axios\n      .get(pexelsApiUrl, {\n        headers: { Authorization: `Bearer ${pexelsApiKey}` },\n      })\n      .then(handlePexelsResponse);\n  }\n  function submitForm(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  function wordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Dictionary\">\n        <section>\n          <h1>What word do you want look up?</h1>\n          <form onSubmit={submitForm}>\n            <input type=\"search\" onChange={wordChange} />\n          </form>\n          <p>suggested words: dawn, piano, comet..</p>\n        </section>\n        <Results results={results} />\n        <Photos photos={photo} />\n        <p className=\"coded\">\n          Coded by Gabriela Dontamsetti{\" \"}\n          <a\n            href=\"https://github.com/gabi-gabu1/react-dictionary-2\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            open-sourced\n          </a>\n        </p>\n      </div>\n    );\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACxC,IAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACK,KAAK,CAACG,OAAP,CAApC;EACA,IAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAApC;EACA,IAAI,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAAlC;EACA,IAAI,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAhC;;EAEA,SAASe,cAAT,CAAwBC,QAAxB,EAAkC;IAChCN,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;EACD;;EACD,SAASC,oBAAT,CAA8BF,QAA9B,EAAwC;IACtCF,QAAQ,CAACE,QAAQ,CAACC,IAAT,CAAcE,MAAf,CAAR;EACD;;EACD,SAASC,MAAT,GAAkB;IAChB,IAAIC,MAAM,GAAI,mDAAkDf,OAAQ,EAAxE;IAEAL,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBR,cAAvB;IAEA,IAAIS,YAAY,GACd,0DADF;IAEA,IAAIC,YAAY,GAAI,0CAAyCnB,OAAQ,aAArE;IACAL,KAAK,CACFqB,GADH,CACOG,YADP,EACqB;MACjBC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASH,YAAa;MAAxC;IADQ,CADrB,EAIGD,IAJH,CAIQL,oBAJR;EAKD;;EACD,SAASU,UAAT,CAAoBC,KAApB,EAA2B;IACzBA,KAAK,CAACC,cAAN;IACAV,MAAM;EACP;;EAED,SAASW,IAAT,GAAgB;IACdnB,SAAS,CAAC,IAAD,CAAT;IACAQ,MAAM;EACP;;EAED,SAASY,UAAT,CAAoBH,KAApB,EAA2B;IACzBtB,UAAU,CAACsB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAV;EACD;;EAED,IAAIvB,MAAJ,EAAY;IACV,oBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAM,QAAQ,EAAEiB,UAAhB;UAAA,uBACE;YAAO,IAAI,EAAC,QAAZ;YAAqB,QAAQ,EAAEI;UAA/B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,OAAD;QAAS,OAAO,EAAEvB;MAAlB;QAAA;QAAA;QAAA;MAAA,QARF,eASE,QAAC,MAAD;QAAQ,MAAM,EAAEI;MAAhB;QAAA;QAAA;QAAA;MAAA,QATF,eAUE;QAAG,SAAS,EAAC,OAAb;QAAA,4CACgC,GADhC,eAEE;UACE,IAAI,EAAC,kDADP;UAEE,MAAM,EAAC,QAFT;UAGE,GAAG,EAAC,YAHN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAuBD,CAxBD,MAwBO;IACLkB,IAAI;IACJ,OAAO,SAAP;EACD;AACF;;GApEuB3B,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}